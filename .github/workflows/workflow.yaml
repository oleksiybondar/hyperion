name: Hyperion Test Framework Workflow

on:
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'tests/**'

jobs:
  style-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install style check dependencies
        run: pip install mypy black ruff xenon

      - name: Run MyPy for type checking
        run: mypy src/ tests/**/*.py --non-interactive --install-types

      - name: Run Black for code formatting
        run: black --check src/ tests/**/*.py

      - name: Run Ruff for additional style checks
        run: ruff check src/ tests/**/*.py

      - name: Run Xenon for static code analyse
        run: xenon --max-average=A --max-modules=A --max-absolute=A src/ tests/**/*.py

  common-test-execution:
    needs: style-checks
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies and set up paths
        run: |
          cd tests
          sh ./install_web_dependencies.sh

      - name: Extend PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src:$(pwd)/tests" >> $GITHUB_ENV

      - name: Run Common tests
        run: |
          cd tests
          pytest common/  

      - name: Upload logs as artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: common-test-logs
          path: ${{ github.workspace }}/tests/logs/
          retention-days: 7


  web-test-execution:
    needs: style-checks
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install browsers
        uses: ./.github/workflows/actions/setup_browsers

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies and set up paths
        run: |
          cd tests
          sh ./install_web_dependencies.sh

      - name: Extend PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src:$(pwd)/tests" >> $GITHUB_ENV

      - name: Run web tests
        run: |
            cd tests
            pytest web/   

      - name: Upload logs as artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: web-test-logs
          path: ${{ github.workspace }}/tests/logs/
          retention-days: 7

  web-waits-test-execution:
    needs: style-checks
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install browsers
        uses: ./.github/workflows/actions/setup_browsers

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies and set up paths
        run: |
          cd tests
          sh ./install_web_dependencies.sh

      - name: Extend PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src:$(pwd)/tests" >> $GITHUB_ENV

      - name: Run Wait API tests
        run: |
          cd tests
          pytest waits/    

      - name: Upload logs as artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: waits-test-logs
          path: ${{ github.workspace }}/tests/logs/
          retention-days: 7

  build-check:
    needs:
      - common-test-execution
      - web-test-execution
      - web-waits-test-execution
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies with Poetry
        run: poetry install

      - name: Build with Poetry (without publishing)
        run: poetry build
